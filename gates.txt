Topic: Realisation of Logic Gates and Familiarisation of Verilog


TYPE: Structural Flow

input a,b;
output y1,y2,y3,y4,y5,y6;
OR(y1,a,b);
AND(y2,a,b);
NOR(y3,a,b);
NOT(y4,a,b);
XOR(y5,a,b);
NAND(y6,a,b);

TYPE: Behavioural Flow

input a,b;
output y1,y2,y3,y4,y5,y6;

assign y1=a|b;
assign y2=a&b;
assign y3=!a;
assign y4= a^b;
assign y5 = !(a^b);
assign y6 = !(a&b);

Qn: f=m(0,1,2,5)

Structural 

module sopf(a,b,c,y)
input a,b,c;
output y;
wire d,e,f,g,h;
NOT(d,a);
NOT(e,b);
NOT(f,c);
AND(g,d,e);
AND(h,c,f);
OR(y,g,h);
endmodule

Dataflow

module(a,b,c,y);
input a,b,c;
output y;
wire w1,w2;
assign w1=(~a) & (~c);
assign w2=(~b) & c;
assign y= w1|w2;
endmodule

Qn: Summation(0,1,2,3,5,7,8,10)
DataFlow

startmodule(a,b,c,y);
input a,b,c;
output y;
wire w1,w2;
assign w1=a|(~d);
assign w2=d|b;
assign y=w1&w2;
endmodule

Structural

startmodule(a,b,c,y);
input a,b,c;
output y;
wire e,f,g;
NOT(e,d);
OR(f,e,a);
OR(g,d,b);
AND(y,f,g);
emdmodule









